generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id                String    @id @default(uuid())
  name              String
  username          String    @unique
  phone             String    @default("0000000000")
  email             String    @unique
  password          String
  role              Role      @default(USER)
  registredProducts Product[] @relation("UserRegistredProducts")
  updatedProducts   Product[] @relation("UserUpdatedProducts")
  createdAt         DateTime  @default(now())
}

model Product {
  id            String        @id @default(uuid())
  name          String
  price         Float
  discount      Float         @default(0)
  category      Category      @relation(fields: [categoryId], references: [id])
  categoryId    String
  sizes         ProductSize[]
  registredBy   User          @relation("UserRegistredProducts", fields: [registredById], references: [id])
  registredById String
  updatedBy     User?         @relation("UserUpdatedProducts", fields: [updatedById], references: [id])
  updatedById   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[]
}

model Size {
  id       String        @id @default(uuid())
  label    String        @unique
  products ProductSize[]
}

model ProductSize {
  productId String
  sizeId    String
  stock     Int

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  size    Size    @relation(fields: [sizeId], references: [id])

  @@id([productId, sizeId])
}
